<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\bk3432_ble_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\bk3432_ble_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050041: Last Updated: Wed Jun 16 15:15:34 2021
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">DataAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[7]">FIQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[6]">IRQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[3]">PrefetchAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[19]">Read_Uart_Buf</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[2]">SoftwareInterrupt</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[1]">Undefined</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[2c]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0snprintf)
 <LI><a href="#[2d]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[38]">app_add_ffe0s</a> from app.o(.text) referenced from app.o(.constdata)
 <LI><a href="#[47]">app_period_timer_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[39]">appm_msg_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[17]">assert_err</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[18]">assert_param</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[66]">ble_action_handle_t_action_input_cb</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[67]">ble_action_handle_t_action_output_cb</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[68]">ble_event_get_t_event_t_bool</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[6b]">ble_event_get_t_event_t_enum</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[6c]">ble_event_get_t_event_t_float</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[69]">ble_event_get_t_event_t_int</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[6a]">ble_event_get_t_event_t_str</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[6d]">ble_event_get_t_event_t_time</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[2a]">ble_ota_start_cb</a> from ble_qiot_ble_device.o(.text) referenced from ble_qiot_service.o(.text)
 <LI><a href="#[29]">ble_ota_stop_cb</a> from ble_qiot_ble_device.o(.text) referenced from ble_qiot_service.o(.text)
 <LI><a href="#[28]">ble_ota_valid_file_cb</a> from ble_qiot_ble_device.o(.text) referenced from ble_qiot_service.o(.text)
 <LI><a href="#[57]">ble_property_t_bool_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[56]">ble_property_t_bool_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[5f]">ble_property_t_enum_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[5e]">ble_property_t_enum_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[5d]">ble_property_t_float_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[5c]">ble_property_t_float_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[59]">ble_property_t_int_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[58]">ble_property_t_int_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[5b]">ble_property_t_str_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[5a]">ble_property_t_str_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[65]">ble_property_t_struct2_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[55]">ble_property_t_struct2_s_bool_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[54]">ble_property_t_struct2_s_bool_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[64]">ble_property_t_struct2_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[63]">ble_property_t_struct_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[49]">ble_property_t_struct_s_bool_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[48]">ble_property_t_struct_s_bool_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[51]">ble_property_t_struct_s_enum_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[50]">ble_property_t_struct_s_enum_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[4f]">ble_property_t_struct_s_float_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[4e]">ble_property_t_struct_s_float_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[4b]">ble_property_t_struct_s_int_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[4a]">ble_property_t_struct_s_int_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[4d]">ble_property_t_struct_s_str_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[4c]">ble_property_t_struct_s_str_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[53]">ble_property_t_struct_s_time_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[52]">ble_property_t_struct_s_time_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[62]">ble_property_t_struct_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[61]">ble_property_t_time_get</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[60]">ble_property_t_time_set</a> from ble_qiot_template.o(.text) referenced from ble_qiot_template.o(.data)
 <LI><a href="#[31]">ffe0s_cleanup</a> from ffe0s.o(.text) referenced from ffe0s.o(.constdata)
 <LI><a href="#[30]">ffe0s_create</a> from ffe0s.o(.text) referenced from ffe0s.o(.constdata)
 <LI><a href="#[2f]">ffe0s_destroy</a> from ffe0s.o(.text) referenced from ffe0s.o(.constdata)
 <LI><a href="#[32]">ffe0s_enable_req_handler</a> from ffe0s_task.o(.text) referenced from ffe0s_task.o(.constdata)
 <LI><a href="#[33]">ffe0s_ffe1_value_upd_req_handler</a> from ffe0s_task.o(.text) referenced from ffe0s_task.o(.constdata)
 <LI><a href="#[2e]">ffe0s_init</a> from ffe0s.o(.text) referenced from ffe0s.o(.constdata)
 <LI><a href="#[2b]">fputc</a> from fputc.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[3f]">gapc_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[3e]">gapc_connection_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[40]">gapc_disconnect_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[3c]">gapc_get_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[42]">gapc_le_pkt_size_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[45]">gapc_param_update_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[43]">gapc_param_updated_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[3d]">gapc_set_dev_info_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[46]">gapc_update_conn_param_req_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[3b]">gapm_cmp_evt_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[3a]">gapm_device_ready_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[41]">gapm_profile_added_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[34]">gattc_att_info_req_ind_handler</a> from ffe0s_task.o(.text) referenced from ffe0s_task.o(.constdata)
 <LI><a href="#[37]">gattc_cmp_evt_handler</a> from ffe0s_task.o(.text) referenced from ffe0s_task.o(.constdata)
 <LI><a href="#[44]">gattc_mtu_changed_ind_handler</a> from app_task.o(.text) referenced from app_task.o(.constdata)
 <LI><a href="#[36]">gattc_read_req_ind_handler</a> from ffe0s_task.o(.text) referenced from ffe0s_task.o(.constdata)
 <LI><a href="#[35]">gattc_write_req_ind_handler</a> from ffe0s_task.o(.text) referenced from ffe0s_task.o(.constdata)
 <LI><a href="#[16]">platform_reset</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[e]">prf_add_profile</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[d]">prf_cleanup</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[c]">prf_create</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[9]">prf_get_id_from_task</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[a]">prf_get_task_from_id</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[b]">prf_init</a> from prf.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[26]">rf_force_agc_enable</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[25]">rf_reset</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[21]">rf_rpl_reg_rd</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[22]">rf_rpl_reg_wr</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[27]">rf_rssi_convert</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[24]">rf_sleep</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[23]">rf_txpwr_dbm_get</a> from rf_xvr.o(.text) referenced from rf_xvr.o(.text)
 <LI><a href="#[f]">rwble_hl_reset</a> from rwble_hl.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[12]">rwip_prevent_sleep_clear</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[11]">rwip_prevent_sleep_set</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[10]">rwip_reset</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[13]">rwip_sleep_lpcycles_2_us</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[14]">rwip_us_2_lpcycles</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[15]">rwip_wakeup_delay_set</a> from rwip.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[6e]">sys_Reset</a> from boot_handlers.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[5]">sys_reserved</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[1a]">uart_clear_rxfifo</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1e]">uart_flow_off</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1d]">uart_flow_on</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[20]">uart_printf</a> from uart.o(.text) referenced from uart.o(.text)
 <LI><a href="#[1b]">uart_read</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1f]">uart_rx_handler</a> from arch_main.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[1c]">uart_write</a> from uart.o(.text) referenced from arch_main.o(.text)
 <LI><a href="#[8]">user_timer_cb</a> from arch_main.o(.text) referenced from arch_main.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[e3]"></a>uart_stack_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[18d]"></a>Undefined_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined (via Veneer)
</UL>

<P><STRONG><a name="[18e]"></a>SoftwareInterrupt_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt (via Veneer)
</UL>

<P><STRONG><a name="[18f]"></a>PrefetchAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort (via Veneer)
</UL>

<P><STRONG><a name="[190]"></a>DataAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort (via Veneer)
</UL>

<P><STRONG><a name="[191]"></a>Reserved_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reserved (via Veneer)
</UL>

<P><STRONG><a name="[b7]"></a>ke_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[bd]"></a>ke_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[c2]"></a>ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[cc]"></a>ke_event_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_isr
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[c1]"></a>ke_event_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
</UL>

<P><STRONG><a name="[b8]"></a>ke_mem_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[f0]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_util_svc_create_db128
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_init
</UL>

<P><STRONG><a name="[f2]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_util_svc_create_db128
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_destroy
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_init
</UL>

<P><STRONG><a name="[f9]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_stop
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_device_ready_ind_handler
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_add_ffe0s
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_notify_ffe1_val
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_enable_req_handler
</UL>

<P><STRONG><a name="[fa]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_stop
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_device_ready_ind_handler
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_add_ffe0s
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_notify_ffe1_val
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_enable_req_handler
</UL>

<P><STRONG><a name="[ee]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[f3]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_stop
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_notify
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_ffe1_value_upd_req_handler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[f7]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_stop
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_notify
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_ffe1_value_upd_req_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_enable_req_handler
</UL>

<P><STRONG><a name="[ed]"></a>ke_task_msg_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[10f]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_start
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_period_timer_handler
</UL>

<P><STRONG><a name="[152]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_delete
</UL>

<P><STRONG><a name="[c4]"></a>ke_timer_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[a5]"></a>em_buf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[a7]"></a>llc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[ac]"></a>llc_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
</UL>

<P><STRONG><a name="[a6]"></a>lld_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[ab]"></a>lld_core_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
</UL>

<P><STRONG><a name="[b6]"></a>lld_crypt_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[b5]"></a>lld_evt_timer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[b1]"></a>lld_evt_end_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[b3]"></a>lld_evt_rx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[c9]"></a>lld_sleep_enter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[ca]"></a>lld_sleep_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
</UL>

<P><STRONG><a name="[cb]"></a>lld_sleep_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>

<P><STRONG><a name="[a8]"></a>llm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[a9]"></a>llm_ble_ready</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[bb]"></a>ea_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[b0]"></a>ea_finetimer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[b4]"></a>ea_sw_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[c6]"></a>ea_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[f8]"></a>gapc_get_conhdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_enable_req_handler
</UL>

<P><STRONG><a name="[a1]"></a>gapm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[a0]"></a>attm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[103]"></a>attmdb_add_service</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_util_svc_create_db128
</UL>

<P><STRONG><a name="[a2]"></a>gattm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[a3]"></a>l2cm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[ba]"></a>hci_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[be]"></a>hci_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[c8]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_ota_data_saved
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qcloud_iot_utils_base64encode
</UL>

<P><STRONG><a name="[105]"></a>rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[84]"></a>srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_package_slice_data
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_request_handle
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_ota_data_saved
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify2
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_hmac_sha1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_flash
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_device_info
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_get_authcode
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_get_authcode
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_get_authcode
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_my_broadcast_data
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_core_data
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_char_convert_to128
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_serv_convert_to128
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_notify
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_notify_ffe1_val
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_handle_t_action_output_cb
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_handle_t_action_input_cb
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_t_event_t_time
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_t_event_t_float
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_t_event_t_str
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_t_event_t_int
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_time_get
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_time_set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_float_get
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_float_set
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_str_get
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_str_set
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_int_get
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_int_set
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_time_get
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_time_set
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_float_get
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_float_set
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_str_get
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_str_set
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_int_get
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_int_set
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_update
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_update
</UL>

<P><STRONG><a name="[e1]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_get_authcode
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2Str
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_clone
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_clone
</UL>

<P><STRONG><a name="[104]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_msg_handle
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_msg_handle
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_package_slice_data
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_get_authcode
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_get_authcode
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_get_authcode
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_flash_data
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_file_end_handle
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_ota_data_saved
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_post
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify2
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_hmac_sha1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_flash
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_get_authcode
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_get_authcode
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_get_authcode
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_my_broadcast_data
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_action_handle
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_get_report_data
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_advertising_start
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_clear_rxfifo
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_clear_rxfifo
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_init
</UL>

<P><STRONG><a name="[134]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_get_authcode
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_get_authcode
</UL>

<P><STRONG><a name="[184]"></a>__ARM_clz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue (via BLX)
</UL>

<P><STRONG><a name="[75]"></a>__ARM_common_disable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[76]"></a>__ARM_common_disable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
</UL>

<P><STRONG><a name="[94]"></a>__ARM_common_enable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
</UL>

<P><STRONG><a name="[95]"></a>__ARM_common_enable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via BLX)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via BLX)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
</UL>

<P><STRONG><a name="[111]"></a>__ARM_common_switch8</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol_1.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle (via BLX)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_parse_tlv (via BLX)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_ret_value_by_type (via BLX)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_space_enough_by_type (via BLX)
</UL>

<P><STRONG><a name="[6e]"></a>sys_Reset</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_handlers.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via Veneer)
</UL>

<P><STRONG><a name="[6f]"></a>SYSirq_FIQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_fiq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[71]"></a>SYSirq_IRQ_Handler</STRONG> (ARM, 16 bytes, Stack size 0 bytes, intc.o(sys_irq_entry))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>

<P><STRONG><a name="[17]"></a>assert_err</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_write
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_read
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_read
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_lpcycles_2_us
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[18]"></a>assert_param</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[73]"></a>assert_warn</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arch_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[74]"></a>dump_data</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, arch_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[16]"></a>platform_reset</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_finish_transfers
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[79]"></a>bdaddr_env_init</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[8]"></a>user_timer_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_triger
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>user_timer_init</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, arch_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_set_sleep_mode
</UL>

<P><STRONG><a name="[80]"></a>rom_env_init</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[88]"></a>rwip_eif_api_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[82]"></a>rw_main</STRONG> (Thumb, 304 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_disable
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cb_register
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_get_sleep_mode
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_input
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emi_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_reduce_voltage_sleep
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_idle_sleep
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_explorer_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_report_property
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_api_init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stack_Integrity_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Reset (via Veneer)
</UL>

<P><STRONG><a name="[9f]"></a>rwble_hl_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwble_hl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[f]"></a>rwble_hl_reset</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwble_hl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[a4]"></a>rwble_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ble_ready
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;em_buf_init
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[aa]"></a>rwble_reset</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_core_reset
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_reset
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;em_buf_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[c5]"></a>rwble_sleep_check</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[c0]"></a>rwble_version</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rwble.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_version
</UL>

<P><STRONG><a name="[ad]"></a>rwble_isr</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, rwble.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sw_isr
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_finetimer_isr
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_rx_isr
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_end_isr
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_timer_isr
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_crypt_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL>

<P><STRONG><a name="[c3]"></a>rwip_check_wakeup_boundary</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[92]"></a>rwip_init</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_mem_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[10]"></a>rwip_reset</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_reset
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>rwip_version</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rwip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_version
</UL>

<P><STRONG><a name="[96]"></a>rwip_schedule</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[11]"></a>rwip_prevent_sleep_set</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_timer_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[99]"></a>rwip_sleep</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_uart_stop
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_check_wakeup_boundary
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_sleep_check
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sleep_check
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_enter
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_sleep_check
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_sleep_check
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[ae]"></a>rwip_wakeup</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_wakeup
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[12]"></a>rwip_prevent_sleep_clear</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>rwip_wakeup_end</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_sleep_wakeup_end
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[14]"></a>rwip_us_2_lpcycles</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_delay_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>rwip_wakeup_delay_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[13]"></a>rwip_sleep_lpcycles_2_us</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, rwip.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[86]"></a>emi_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, emi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[91]"></a>flash_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[cd]"></a>flash_readword</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_status
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_start
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clearKey
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeKey
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>

<P><STRONG><a name="[d3]"></a>flash_writeword</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_status
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_start
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clearKey
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeKey
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[8e]"></a>flash_erase_sector</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_status
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_start
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clearKey
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeKey
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_stop_cb
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_flash
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[d4]"></a>flash_erase</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[d5]"></a>flash_write</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_write_flash
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_flash
</UL>

<P><STRONG><a name="[7a]"></a>flash_read</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_flash
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_flash
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_device_info
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
</UL>

<P><STRONG><a name="[8a]"></a>gpio_config</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_test_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[8d]"></a>gpio_get_input</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[8b]"></a>gpio_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_triger
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_bool_set
</UL>

<P><STRONG><a name="[7c]"></a>gpio_triger</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_timer_cb
</UL>

<P><STRONG><a name="[d6]"></a>gpio_isr</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[d7]"></a>gpio_test_init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_config
</UL>

<P><STRONG><a name="[85]"></a>system_sleep_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[83]"></a>icu_init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[9a]"></a>icu_get_sleep_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[7e]"></a>icu_set_sleep_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_timer_init
</UL>

<P><STRONG><a name="[d8]"></a>enter_deep_sleep</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, icu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>

<P><STRONG><a name="[9b]"></a>cpu_reduce_voltage_sleep</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[da]"></a>cpu_wakeup</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[9c]"></a>cpu_idle_sleep</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, icu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[89]"></a>intc_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[72]"></a>IRQ_Exception</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_isr
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_isr
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[70]"></a>FIQ_Exception</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, intc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_isr
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_wakeup
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[7f]"></a>pwm_init</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, pwm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_timer_init
</UL>

<P><STRONG><a name="[dd]"></a>pwm_isr</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[87]"></a>timer_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[de]"></a>timer_isr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
</UL>

<P><STRONG><a name="[98]"></a>wdt_disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[78]"></a>wdt_enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>

<P><STRONG><a name="[b2]"></a>wdt_feed</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[19]"></a>Read_Uart_Buf</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[9e]"></a>uart_putchar</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_int
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stack_Integrity_Check
</UL>

<P><STRONG><a name="[20]"></a>uart_printf</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_stop_cb
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_start_cb
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_msg_handle
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_msg_handle
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_package_slice_data
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_write_flash
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_is_enable
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_get_download_addr
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_data_handle
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_file_end_handle
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_request_handle
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_stop
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_start
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_ota_data_saved
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_write_data_to_flash
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_user_stop_cb
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_param_id_type
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_id_array_size
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_data_by_id
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_post
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify2
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_hmac_sha1
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_flash
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_inform_mtu_result
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_get_authcode
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_get_authcode
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_write_result
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_get_authcode
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_my_broadcast_data
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_flash_data
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connection_state_set
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_connection_state_set
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_bind_state_set
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_core_data
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_set_data
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_report_reply_handle
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_get_data_by_id
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_event_reply_handle
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_property_type_by_id
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_user_handle_output_param
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_user_handle_input_param
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_get_output_type_by_id
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_action_handle
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_reply_handle
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_get_report_data
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_parse_tlv
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_data_handle
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_advertising_start
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_callback
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_mtu_changed_ind_handler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_updated_ind_handler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_le_pkt_size_ind_handler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_req_ind_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_add_ffe0s
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_notify
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_notify_ffe1_val
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_util_svc_create_db128
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_explorer_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dump_data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_warn
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_handler
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_get_output_id_size
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_get_input_id_size
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_get_intput_type_by_id
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_struct_get_data
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_struct_handle
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct2_s_bool_get
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct2_s_bool_set
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_time_get
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_time_set
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_enum_get
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_enum_set
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_float_get
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_float_set
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_str_get
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_str_set
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_int_get
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_int_set
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_bool_get
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_bool_set
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_time_get
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_time_set
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_enum_get
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_enum_set
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_float_get
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_float_set
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_str_get
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_str_set
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_int_get
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_int_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_bool_get
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_bool_set
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_valid_file_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.text)
</UL>
<P><STRONG><a name="[e0]"></a>hex2Str</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_print_int
</UL>

<P><STRONG><a name="[e2]"></a>uart_print_int</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex2Str
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>

<P><STRONG><a name="[8f]"></a>uart_init</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_stack_register
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[1d]"></a>uart_flow_on</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[1a]"></a>uart_clear_rxfifo</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[1e]"></a>uart_flow_off</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[77]"></a>uart_finish_transfers</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>

<P><STRONG><a name="[1b]"></a>uart_read</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[1c]"></a>uart_write</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[90]"></a>uart_cb_register</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[db]"></a>uart_isr</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[c7]"></a>check_uart_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep
</UL>

<P><STRONG><a name="[27]"></a>rf_rssi_convert</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>Delay_ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK32K_AutoCali_init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[e4]"></a>kmod_calibration</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_xver_BK3432_openLoop
</UL>

<P><STRONG><a name="[e5]"></a>initial_xver_BK3432_openLoop</STRONG> (Thumb, 330 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
</UL>

<P><STRONG><a name="[b9]"></a>rf_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_xver_BK3432_openLoop
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[d9]"></a>Delay_us</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rf_xvr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_deep_sleep
</UL>

<P><STRONG><a name="[e6]"></a>CLK32K_AutoCali_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rf_xvr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>

<P><STRONG><a name="[e8]"></a>uart2_putchar</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
</UL>

<P><STRONG><a name="[e7]"></a>uart2_printf</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_putchar
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>

<P><STRONG><a name="[e9]"></a>uart2_clear_rxfifo</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[ea]"></a>uart2_read</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>

<P><STRONG><a name="[eb]"></a>uart2_write</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>

<P><STRONG><a name="[dc]"></a>uart2_isr</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, uart2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[b]"></a>prf_init</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_msg_flush
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[e]"></a>prf_add_profile</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>prf_create</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>prf_cleanup</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>prf_env_get</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_notify
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_ffe1_value_upd_req_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_enable_req_handler
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_get_att_idx
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_get_att_handle
</UL>

<P><STRONG><a name="[fc]"></a>prf_src_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_notify_ffe1_val
</UL>

<P><STRONG><a name="[9]"></a>prf_get_id_from_task</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[a]"></a>prf_get_task_from_id</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_notify
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[ef]"></a>ffe0s_prf_itf_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ffe0s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[f4]"></a>ffe0s_get_att_handle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ffe0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_notify_ffe1_val
</UL>

<P><STRONG><a name="[f6]"></a>ffe0s_get_att_idx</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ffe0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[fd]"></a>ble_send_notify</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, ffe0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_notify_ffe1_val
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify2
</UL>

<P><STRONG><a name="[101]"></a>attm_serv_convert_to128</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, attm_util128.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_util_svc_create_db128
</UL>

<P><STRONG><a name="[102]"></a>attm_char_convert_to128</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, attm_util128.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_util_svc_create_db128
</UL>

<P><STRONG><a name="[f1]"></a>attm_util_svc_create_db128</STRONG> (Thumb, 264 bytes, Stack size 0 bytes, attm_util128.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_char_convert_to128
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_serv_convert_to128
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_add_service
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_init
</UL>

<P><STRONG><a name="[bc]"></a>appm_init</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[10a]"></a>appm_add_svc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[38]"></a>app_add_ffe0s</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>appm_disconnect</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>

<P><STRONG><a name="[107]"></a>appm_update_param</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_req_ind_handler
</UL>

<P><STRONG><a name="[108]"></a>appm_update_adv_data</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[109]"></a>appm_get_dev_name</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[110]"></a>ble_lldata_parse_tlv</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, ble_qiot_llsync_data.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_action_handle
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_data_handle
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_struct_handle
</UL>

<P><STRONG><a name="[115]"></a>ble_user_property_get_report_data</STRONG> (Thumb, 250 bytes, Stack size 0 bytes, ble_qiot_llsync_data.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_get_data_by_id
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_property_type_by_id
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_report_property
</UL>

<P><STRONG><a name="[118]"></a>ble_lldata_property_request_handle</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_qiot_llsync_data.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_data_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_msg_handle
</UL>

<P><STRONG><a name="[119]"></a>ble_lldata_property_reply_handle</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, ble_qiot_llsync_data.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_report_reply_handle
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_data_handle
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_msg_handle
</UL>

<P><STRONG><a name="[11b]"></a>ble_lldata_event_handle</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ble_qiot_llsync_data.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_event_reply_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_msg_handle
</UL>

<P><STRONG><a name="[11d]"></a>ble_lldata_action_handle</STRONG> (Thumb, 1120 bytes, Stack size 0 bytes, ble_qiot_llsync_data.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_user_handle_output_param
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_user_handle_input_param
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_get_output_type_by_id
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_parse_tlv
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_msg_handle
</UL>

<P><STRONG><a name="[13a]"></a>llsync_mtu_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify2
</UL>

<P><STRONG><a name="[13e]"></a>llsync_mtu_update</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_sync_mtu
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect_cb
</UL>

<P><STRONG><a name="[121]"></a>llsync_bind_state_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_write_result
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_write_result
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_flash_data
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_advertising_start
</UL>

<P><STRONG><a name="[154]"></a>llsync_bind_state_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_advertising_start
</UL>

<P><STRONG><a name="[122]"></a>llsync_connection_state_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_write_result
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect_cb
</UL>

<P><STRONG><a name="[139]"></a>llsync_is_connected</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_msg_handle
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_msg_handle
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify2
</UL>

<P><STRONG><a name="[123]"></a>ble_connection_state_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect_cb
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_connect_cb
</UL>

<P><STRONG><a name="[126]"></a>memchk</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_device_info
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_flash_data
</UL>

<P><STRONG><a name="[124]"></a>ble_init_flash_data</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_flash
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_device_info
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memchk
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_bind_state_set
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_explorer_init
</UL>

<P><STRONG><a name="[12a]"></a>ble_get_my_broadcast_data</STRONG> (Thumb, 290 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_advertising_start
</UL>

<P><STRONG><a name="[12d]"></a>ble_bind_get_authcode</STRONG> (Thumb, 1000 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_hmac_sha1
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qcloud_iot_utils_base64decode
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
</UL>

<P><STRONG><a name="[131]"></a>ble_bind_write_result</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_bind_state_set
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_core_data
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
</UL>

<P><STRONG><a name="[132]"></a>ble_unbind_write_result</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_connection_state_set
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_bind_state_set
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_core_data
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
</UL>

<P><STRONG><a name="[133]"></a>ble_conn_get_authcode</STRONG> (Thumb, 596 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_hmac_sha1
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
</UL>

<P><STRONG><a name="[135]"></a>ble_unbind_get_authcode</STRONG> (Thumb, 552 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_hmac_sha1
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
</UL>

<P><STRONG><a name="[136]"></a>ble_inform_mtu_result</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_sync_mtu
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
</UL>

<P><STRONG><a name="[138]"></a>ble_event_notify2</STRONG> (Thumb, 342 bytes, Stack size 0 bytes, ble_qiot_llsync_event.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_is_connected
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_mtu_get
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_notify
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_post
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_status
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_sync_mtu
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify
</UL>

<P><STRONG><a name="[13b]"></a>ble_event_get_status</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ble_qiot_llsync_event.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify2
</UL>

<P><STRONG><a name="[97]"></a>ble_event_report_property</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_qiot_llsync_event.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_get_report_data
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[114]"></a>ble_event_notify</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_qiot_llsync_event.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify2
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_request_handle
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_report_check_result
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_reply_ota_data
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_report_device_info
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_action_handle
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_get_report_data
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_data_handle
</UL>

<P><STRONG><a name="[13c]"></a>ble_event_report_device_info</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, ble_qiot_llsync_event.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_user_data_mtu_size
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
</UL>

<P><STRONG><a name="[137]"></a>ble_event_sync_mtu</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ble_qiot_llsync_event.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify2
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_mtu_update
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_inform_mtu_result
</UL>

<P><STRONG><a name="[13f]"></a>ble_event_post</STRONG> (Thumb, 292 bytes, Stack size 0 bytes, ble_qiot_llsync_event.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_param_id_type
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_id_array_size
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_data_by_id
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify2
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[159]"></a>ble_ota_callback_reg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_explorer_init
</UL>

<P><STRONG><a name="[10e]"></a>ble_ota_timer_callback</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_delete
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_reply_ota_data
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_user_stop_cb
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_period_timer_handler
</UL>

<P><STRONG><a name="[148]"></a>ble_ota_stop</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_delete
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_write_data_to_flash
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_user_stop_cb
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect_cb
</UL>

<P><STRONG><a name="[149]"></a>ble_ota_request_handle</STRONG> (Thumb, 308 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_is_enable
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_init
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_start
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_msg_handle
</UL>

<P><STRONG><a name="[14d]"></a>ble_ota_file_end_handle</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_crc32
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_delete
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_report_check_result
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_user_stop_cb
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_flash
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_msg_handle
</UL>

<P><STRONG><a name="[151]"></a>ble_ota_data_handle</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_start
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_ota_data_saved
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_reply_ota_data
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_msg_handle
</UL>

<P><STRONG><a name="[10b]"></a>ble_qiot_advertising_start</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_stop
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_my_broadcast_data
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_bind_state_get
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_bind_state_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[157]"></a>ble_qiot_advertising_stop</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ble_qiot_service.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_stop
</UL>

<P><STRONG><a name="[93]"></a>ble_qiot_explorer_init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_callback_reg
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_flash_data
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_set_log_level
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[15b]"></a>ble_device_info_msg_handle</STRONG> (Thumb, 1328 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_type_header_len
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_package_slice_data
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_report_device_info
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_inform_mtu_result
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_get_authcode
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_get_authcode
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_write_result
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_write_result
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_get_authcode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_connection_state_set
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_write_cb
</UL>

<P><STRONG><a name="[fe]"></a>ble_device_info_write_cb</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[15d]"></a>ble_lldata_msg_handle</STRONG> (Thumb, 440 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_msg_type_header_len
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_package_slice_data
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_is_connected
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_action_handle
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_event_handle
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_reply_handle
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_request_handle
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_write_cb
</UL>

<P><STRONG><a name="[ff]"></a>ble_lldata_write_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_msg_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[15e]"></a>ble_ota_msg_handle</STRONG> (Thumb, 294 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_package_slice_data
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_data_handle
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_file_end_handle
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_request_handle
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_is_connected
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_write_cb
</UL>

<P><STRONG><a name="[100]"></a>ble_ota_write_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_msg_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[10c]"></a>ble_gap_connect_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connection_state_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[10d]"></a>ble_gap_disconnect_cb</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_stop
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connection_state_set
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_connection_state_set
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llsync_mtu_update
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
</UL>

<P><STRONG><a name="[15f]"></a>qcloud_iot_utils_base64encode</STRONG> (Thumb, 262 bytes, Stack size 0 bytes, ble_qiot_utils_base64.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[12f]"></a>qcloud_iot_utils_base64decode</STRONG> (Thumb, 270 bytes, Stack size 0 bytes, ble_qiot_utils_base64.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_get_authcode
</UL>

<P><STRONG><a name="[14e]"></a>ble_qiot_crc32</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ble_qiot_utils_crc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_file_end_handle
</UL>

<P><STRONG><a name="[130]"></a>utils_hmac_sha1</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, ble_qiot_utils_hmac.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_update
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_starts
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_get_authcode
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_get_authcode
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_get_authcode
</UL>

<P><STRONG><a name="[158]"></a>ble_qiot_set_log_level</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_qiot_utils_log.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_explorer_init
</UL>

<P><STRONG><a name="[164]"></a>utils_md5_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_qiot_utils_md5.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5
</UL>

<P><STRONG><a name="[16a]"></a>utils_md5_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_qiot_utils_md5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5
</UL>

<P><STRONG><a name="[165]"></a>utils_md5_clone</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_qiot_utils_md5.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[169]"></a>utils_md5_starts</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ble_qiot_utils_md5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5
</UL>

<P><STRONG><a name="[167]"></a>utils_md5_process</STRONG> (Thumb, 1974 bytes, Stack size 0 bytes, ble_qiot_utils_md5.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_update
</UL>

<P><STRONG><a name="[166]"></a>utils_md5_update</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, ble_qiot_utils_md5.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_process
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_finish
</UL>

<P><STRONG><a name="[168]"></a>utils_md5_finish</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, ble_qiot_utils_md5.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_update
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5
</UL>

<P><STRONG><a name="[12c]"></a>utils_md5</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ble_qiot_utils_md5.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_finish
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_update
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_starts
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_free
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_md5_init
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_my_broadcast_data
</UL>

<P><STRONG><a name="[160]"></a>utils_sha1_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_qiot_utils_sha1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_hmac_sha1
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1
</UL>

<P><STRONG><a name="[16e]"></a>utils_sha1_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_qiot_utils_sha1.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1
</UL>

<P><STRONG><a name="[16b]"></a>utils_sha1_clone</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_qiot_utils_sha1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[161]"></a>utils_sha1_starts</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ble_qiot_utils_sha1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_hmac_sha1
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1
</UL>

<P><STRONG><a name="[16c]"></a>utils_sha1_process</STRONG> (Thumb, 4870 bytes, Stack size 0 bytes, ble_qiot_utils_sha1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_update
</UL>

<P><STRONG><a name="[162]"></a>utils_sha1_update</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, ble_qiot_utils_sha1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_process
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_hmac_sha1
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_finish
</UL>

<P><STRONG><a name="[163]"></a>utils_sha1_finish</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, ble_qiot_utils_sha1.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_update
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_hmac_sha1
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1
</UL>

<P><STRONG><a name="[16d]"></a>utils_sha1</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ble_qiot_utils_sha1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_free
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_update
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_starts
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;utils_sha1_finish
</UL>

<P><STRONG><a name="[170]"></a>ble_user_property_struct_handle</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_parse_tlv
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct2_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_set
</UL>

<P><STRONG><a name="[171]"></a>ble_user_property_struct_get_data</STRONG> (Thumb, 228 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct2_get
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_get
</UL>

<P><STRONG><a name="[116]"></a>ble_get_property_type_by_id</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_get_report_data
</UL>

<P><STRONG><a name="[113]"></a>ble_user_property_set_data</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_data_handle
</UL>

<P><STRONG><a name="[117]"></a>ble_user_property_get_data_by_id</STRONG> (Thumb, 930 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_ret_value_by_type
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_space_enough_by_type
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_get_report_data
</UL>

<P><STRONG><a name="[11a]"></a>ble_user_property_report_reply_handle</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_reply_handle
</UL>

<P><STRONG><a name="[140]"></a>ble_event_get_id_array_size</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ble_qiot_template.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_post
</UL>

<P><STRONG><a name="[141]"></a>ble_event_get_param_id_type</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, ble_qiot_template.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_post
</UL>

<P><STRONG><a name="[142]"></a>ble_event_get_data_by_id</STRONG> (Thumb, 220 bytes, Stack size 0 bytes, ble_qiot_template.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_ret_value_by_type
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_space_enough_by_type
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_post
</UL>

<P><STRONG><a name="[11c]"></a>ble_user_event_reply_handle</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_event_handle
</UL>

<P><STRONG><a name="[175]"></a>ble_action_get_intput_type_by_id</STRONG> (Thumb, 600 bytes, Stack size 0 bytes, ble_qiot_template.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[11f]"></a>ble_action_get_output_type_by_id</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_action_handle
</UL>

<P><STRONG><a name="[176]"></a>ble_action_get_input_id_size</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ble_qiot_template.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[177]"></a>ble_action_get_output_id_size</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ble_qiot_template.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[11e]"></a>ble_action_user_handle_input_param</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_action_handle
</UL>

<P><STRONG><a name="[120]"></a>ble_action_user_handle_output_param</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_ret_value_by_type
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_check_space_enough_by_type
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_action_handle
</UL>

<P><STRONG><a name="[127]"></a>ble_get_device_info</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, ble_qiot_ble_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memchk
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_flash_data
</UL>

<P><STRONG><a name="[129]"></a>ble_write_flash</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, ble_qiot_ble_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_core_data
</UL>

<P><STRONG><a name="[125]"></a>ble_read_flash</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_qiot_ble_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_file_end_handle
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_flash_data
</UL>

<P><STRONG><a name="[13d]"></a>ble_get_user_data_mtu_size</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_qiot_ble_device.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_report_device_info
</UL>

<P><STRONG><a name="[14b]"></a>ble_ota_is_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ble_qiot_ble_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_request_handle
</UL>

<P><STRONG><a name="[153]"></a>ble_ota_get_download_addr</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ble_qiot_ble_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_init
</UL>

<P><STRONG><a name="[146]"></a>ble_ota_write_flash</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ble_qiot_ble_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_write_data_to_flash
</UL>

<P><STRONG><a name="[2a]"></a>ble_ota_start_cb</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_qiot_ble_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_service.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>ble_ota_valid_file_cb</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_qiot_ble_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_service.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>ble_ota_stop_cb</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, ble_qiot_ble_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_service.o(.text)
</UL>
<P><STRONG><a name="[156]"></a>ble_advertising_start</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, ble_qiot_ble_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_advertising_start
</UL>

<P><STRONG><a name="[155]"></a>ble_advertising_stop</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, ble_qiot_ble_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_advertising_stop
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_advertising_start
</UL>

<P><STRONG><a name="[12b]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_report_device_info
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_get_authcode
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_get_authcode
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_my_broadcast_data
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_str_get
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_str_get
</UL>

<P><STRONG><a name="[16f]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_handle_t_action_input_cb
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_float_get
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_struct_s_float_set
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_float_get
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_property_t_float_set
</UL>

<P><STRONG><a name="[178]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[17b]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[17f]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[180]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[181]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[182]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[183]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[18a]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[17a]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[179]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[17c]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[17e]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[17d]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz (via BLX)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[185]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[174]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0printf))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_handle_t_action_input_cb
</UL>

<P><STRONG><a name="[187]"></a>__0snprintf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[12e]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0snprintf))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_get_authcode
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_get_authcode
</UL>

<P><STRONG><a name="[188]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[df]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_printf
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[2b]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fputc.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1f]"></a>uart_rx_handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(.text)
</UL>
<P><STRONG><a name="[9d]"></a>Stack_Integrity_Check</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, arch_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[1]"></a>Undefined</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[2]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[3]"></a>PrefetchAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[4]"></a>DataAbort</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[6]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[5]"></a>sys_reserved</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[7]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size 0 bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[cf]"></a>flash_unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[ce]"></a>flash_writeKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[d2]"></a>flash_clearKey</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[d0]"></a>flash_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[d1]"></a>flash_status</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[25]"></a>rf_reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[23]"></a>rf_txpwr_dbm_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[24]"></a>rf_sleep</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>rf_rpl_reg_rd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[22]"></a>rf_rpl_reg_wr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>rf_force_agc_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rf_xvr.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(.text)
</UL>
<P><STRONG><a name="[ec]"></a>prf_itf_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, prf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_prf_itf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_create
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_cleanup
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_add_profile
</UL>

<P><STRONG><a name="[2e]"></a>ffe0s_init</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, ffe0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_util_svc_create_db128
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ffe0s.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>ffe0s_destroy</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ffe0s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ffe0s.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>ffe0s_create</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffe0s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ffe0s.o(.constdata)
</UL>
<P><STRONG><a name="[31]"></a>ffe0s_cleanup</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffe0s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ffe0s.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>ffe0s_enable_req_handler</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, ffe0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ffe0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[fb]"></a>ffe0s_notify_ffe1_val</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, ffe0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_get_att_handle
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_notify
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_ffe1_value_upd_req_handler
</UL>

<P><STRONG><a name="[33]"></a>ffe0s_ffe1_value_upd_req_handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, ffe0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_notify_ffe1_val
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ffe0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, ffe0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_get_att_idx
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ffe0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, ffe0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_write_cb
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_write_cb
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_write_cb
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_get_att_idx
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ffe0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, ffe0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ffe0s_get_att_idx
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ffe0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ffe0s_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ffe0s_task.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>gapm_device_ready_ind_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_advertising_start
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_add_svc
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>gapc_set_dev_info_req_ind_handler</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_advertising_start
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_connect_cb
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_advertising_start
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect_cb
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>gapm_profile_added_ind_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>app_period_timer_handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>appm_msg_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_task.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>gapc_update_conn_param_req_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>gapc_le_pkt_size_ind_handler</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>gapc_param_updated_ind_handler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>gattc_mtu_changed_ind_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>gapc_param_update_req_ind_handler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, app_task.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>ble_lldata_property_data_handle</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, ble_qiot_llsync_data.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_set_data
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_parse_tlv
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_reply_handle
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_property_request_handle
</UL>

<P><STRONG><a name="[128]"></a>ble_write_core_data</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, ble_qiot_llsync_device.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_write_flash
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_unbind_write_result
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bind_write_result
</UL>

<P><STRONG><a name="[143]"></a>ble_ota_user_stop_cb</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_file_end_handle
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_stop
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_callback
</UL>

<P><STRONG><a name="[144]"></a>ble_ota_reply_ota_data</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_data_handle
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_ota_data_saved
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_callback
</UL>

<P><STRONG><a name="[145]"></a>ble_ota_write_data_to_flash</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_write_flash
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_stop
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_qiot_ota_data_saved
</UL>

<P><STRONG><a name="[150]"></a>ble_qiot_ota_data_saved</STRONG> (Thumb, 736 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_write_data_to_flash
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_reply_ota_data
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_data_handle
</UL>

<P><STRONG><a name="[14f]"></a>ble_ota_report_check_result</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_file_end_handle
</UL>

<P><STRONG><a name="[147]"></a>ble_ota_timer_delete</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_file_end_handle
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_stop
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_timer_callback
</UL>

<P><STRONG><a name="[14c]"></a>ble_ota_timer_start</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_data_handle
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_request_handle
</UL>

<P><STRONG><a name="[14a]"></a>ble_ota_init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ble_qiot_llsync_ota.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_get_download_addr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_request_handle
</UL>

<P><STRONG><a name="[15a]"></a>ble_package_slice_data</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ota_msg_handle
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_msg_handle
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
</UL>

<P><STRONG><a name="[15c]"></a>ble_msg_type_header_len</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ble_qiot_service.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_lldata_msg_handle
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_device_info_msg_handle
</UL>

<P><STRONG><a name="[56]"></a>ble_property_t_bool_set</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>ble_property_t_bool_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[58]"></a>ble_property_t_int_set</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[59]"></a>ble_property_t_int_get</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[5a]"></a>ble_property_t_str_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>ble_property_t_str_get</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[5c]"></a>ble_property_t_float_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[5d]"></a>ble_property_t_float_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[5e]"></a>ble_property_t_enum_set</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[5f]"></a>ble_property_t_enum_get</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[60]"></a>ble_property_t_time_set</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[61]"></a>ble_property_t_time_get</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>ble_property_t_struct_s_bool_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>ble_property_t_struct_s_bool_get</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>ble_property_t_struct_s_int_set</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>ble_property_t_struct_s_int_get</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>ble_property_t_struct_s_str_set</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>ble_property_t_struct_s_str_get</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>ble_property_t_struct_s_float_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[4f]"></a>ble_property_t_struct_s_float_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[50]"></a>ble_property_t_struct_s_enum_set</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[51]"></a>ble_property_t_struct_s_enum_get</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[52]"></a>ble_property_t_struct_s_time_set</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[53]"></a>ble_property_t_struct_s_time_get</STRONG> (Thumb, 766 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[62]"></a>ble_property_t_struct_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_struct_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[63]"></a>ble_property_t_struct_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_struct_get_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[54]"></a>ble_property_t_struct2_s_bool_set</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[55]"></a>ble_property_t_struct2_s_bool_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[64]"></a>ble_property_t_struct2_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_struct_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[65]"></a>ble_property_t_struct2_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_struct_get_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[172]"></a>ble_check_space_enough_by_type</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_data_by_id
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_get_data_by_id
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_user_handle_output_param
</UL>

<P><STRONG><a name="[173]"></a>ble_check_ret_value_by_type</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_event_get_data_by_id
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_user_property_get_data_by_id
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_action_user_handle_output_param
</UL>

<P><STRONG><a name="[68]"></a>ble_event_get_t_event_t_bool</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[69]"></a>ble_event_get_t_event_t_int</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[6a]"></a>ble_event_get_t_event_t_str</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[6b]"></a>ble_event_get_t_event_t_enum</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[6c]"></a>ble_event_get_t_event_t_float</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[6d]"></a>ble_event_get_t_event_t_time</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[66]"></a>ble_action_handle_t_action_input_cb</STRONG> (Thumb, 246 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[67]"></a>ble_action_handle_t_action_output_cb</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, ble_qiot_template.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_qiot_template.o(.data)
</UL>
<P><STRONG><a name="[189]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 0 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[186]"></a>_printf_core</STRONG> (Thumb, 1764 bytes, Stack size 0 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[18c]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[18b]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2c]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0snprintf)
</UL>
<P><STRONG><a name="[2d]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
